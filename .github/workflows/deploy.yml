name: Deploy

on:
  push:

jobs:
  production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Get Package Version
        id: get_version
        run: |
          VERSION=$(cat VERSION.txt)
          echo "::set-output name=version::$VERSION"

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PROD_DROPLET_SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p 22 ${{ secrets.PROD_DROPLET_IP }} >> ~/.ssh/known_hosts
          cat ~/.ssh/known_hosts
          ls -la ~/.ssh

      - name: Verify SSH connection
        run: |
          ssh -i ~/.ssh/deploy_key -vvv root@${{ secrets.PROD_DROPLET_IP }} "echo SSH connection successful"

      - name: Install Expect
        run: sudo apt-get install -y expect

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and Push Docker Image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker buildx create --use
          docker buildx inspect --bootstrap
          VERSION=$(cat VERSION.txt)
          docker buildx build -t $DOCKER_USERNAME/integrations-core:$VERSION . --load
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_USERNAME/integrations-core:$VERSION
          
      - name: SSH into Droplet and run commands
              run: |
                ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_DROPLET_IP }} << 'EOF'
                  echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
                  cd /path/to/compose
                  docker compose -f docker-compose.yaml pull
                  docker compose -f docker-compose.yaml up -d
                EOF
              env:
                DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
                DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
